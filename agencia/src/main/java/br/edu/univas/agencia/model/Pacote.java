package br.edu.univas.agencia.model;

// Generated 11/11/2015 21:59:26 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.xml.bind.annotation.XmlRootElement;

/**
 * Pacote generated by hbm2java
 */
@Entity
@Table(name = "pacote", catalog = "agencia")
@XmlRootElement
public class Pacote implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer id;
	private Cidade cidade;
	private Date dataInicio;
	private Date dataFim;
	private int quantidadePessoas;
	private Set<HotelReserva> hotelReservas = new HashSet<HotelReserva>(0);
	private Set<RestauranteReserva> restauranteReservas = new HashSet<RestauranteReserva>(
			0);
	private Set<Pagamento> pagamentos = new HashSet<Pagamento>(0);
	private Set<ReservaPontosTuristicos> reservaPontosTuristicoses = new HashSet<ReservaPontosTuristicos>(
			0);

	private Set<VooReserva> vooReservas = new HashSet<VooReserva>(0);

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cidade_id", nullable = false)
	public Cidade getCidade() {
		return this.cidade;
	}

	public void setCidade(Cidade cidade) {
		this.cidade = cidade;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "data_inicio", nullable = false, length = 10)
	public Date getDataInicio() {
		return this.dataInicio;
	}

	public void setDataInicio(Date dataInicio) {
		this.dataInicio = dataInicio;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "data_fim", nullable = false, length = 10)
	public Date getDataFim() {
		return this.dataFim;
	}

	public void setDataFim(Date dataFim) {
		this.dataFim = dataFim;
	}

	@Column(name = "quantidade_pessoas", nullable = false)
	public int getQuantidadePessoas() {
		return this.quantidadePessoas;
	}

	public void setQuantidadePessoas(int quantidadePessoas) {
		this.quantidadePessoas = quantidadePessoas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "pacote")
	public Set<HotelReserva> getHotelReservas() {
		return this.hotelReservas;
	}

	public void setHotelReservas(Set<HotelReserva> hotelReservas) {
		this.hotelReservas = hotelReservas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "pacote")
	public Set<RestauranteReserva> getRestauranteReservas() {
		return this.restauranteReservas;
	}

	public void setRestauranteReservas(
			Set<RestauranteReserva> restauranteReservas) {
		this.restauranteReservas = restauranteReservas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "pacote")
	public Set<Pagamento> getPagamentos() {
		return this.pagamentos;
	}

	public void setPagamentos(Set<Pagamento> pagamentos) {
		this.pagamentos = pagamentos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "pacote")
	public Set<ReservaPontosTuristicos> getReservaPontosTuristicoses() {
		return this.reservaPontosTuristicoses;
	}

	public void setReservaPontosTuristicoses(
			Set<ReservaPontosTuristicos> reservaPontosTuristicoses) {
		this.reservaPontosTuristicoses = reservaPontosTuristicoses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "pacote")
	public Set<VooReserva> getVooReservas() {
		return this.vooReservas;
	}

	public void setVooReservas(Set<VooReserva> vooReservas) {
		this.vooReservas = vooReservas;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((cidade == null) ? 0 : cidade.hashCode());
		result = prime * result + ((dataFim == null) ? 0 : dataFim.hashCode());
		result = prime * result
				+ ((dataInicio == null) ? 0 : dataInicio.hashCode());
		result = prime * result
				+ ((hotelReservas == null) ? 0 : hotelReservas.hashCode());
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime * result
				+ ((pagamentos == null) ? 0 : pagamentos.hashCode());
		result = prime * result + quantidadePessoas;
		result = prime
				* result
				+ ((reservaPontosTuristicoses == null) ? 0
						: reservaPontosTuristicoses.hashCode());
		result = prime
				* result
				+ ((restauranteReservas == null) ? 0 : restauranteReservas
						.hashCode());
		result = prime * result
				+ ((vooReservas == null) ? 0 : vooReservas.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Pacote other = (Pacote) obj;
		if (cidade == null) {
			if (other.cidade != null)
				return false;
		} else if (!cidade.equals(other.cidade))
			return false;
		if (dataFim == null) {
			if (other.dataFim != null)
				return false;
		} else if (!dataFim.equals(other.dataFim))
			return false;
		if (dataInicio == null) {
			if (other.dataInicio != null)
				return false;
		} else if (!dataInicio.equals(other.dataInicio))
			return false;
		if (hotelReservas == null) {
			if (other.hotelReservas != null)
				return false;
		} else if (!hotelReservas.equals(other.hotelReservas))
			return false;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		if (pagamentos == null) {
			if (other.pagamentos != null)
				return false;
		} else if (!pagamentos.equals(other.pagamentos))
			return false;
		if (quantidadePessoas != other.quantidadePessoas)
			return false;
		if (reservaPontosTuristicoses == null) {
			if (other.reservaPontosTuristicoses != null)
				return false;
		} else if (!reservaPontosTuristicoses
				.equals(other.reservaPontosTuristicoses))
			return false;
		if (restauranteReservas == null) {
			if (other.restauranteReservas != null)
				return false;
		} else if (!restauranteReservas.equals(other.restauranteReservas))
			return false;
		if (vooReservas == null) {
			if (other.vooReservas != null)
				return false;
		} else if (!vooReservas.equals(other.vooReservas))
			return false;
		return true;
	}

}
